{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///home/user/agenko-nextjs/src/components/UtmLinkUpdater.tsx"],"sourcesContent":["// src/components/UtmLinkUpdater.tsx\n'use client';\n\nimport { useEffect } from 'react';\nimport { usePathname, useSearchParams } from 'next/navigation';\n\nconst SESSION_STORAGE_KEY = 'utm_params_session';\n\nexport function UtmLinkUpdater() {\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n\n  useEffect(() => {\n    // 1. Check for new UTM parameters in the current URL\n    const currentParams = new URLSearchParams(searchParams.toString());\n    const utmKeys = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content'];\n    let newUtmParams = new URLSearchParams();\n\n    let hasNewUtms = false;\n    utmKeys.forEach(key => {\n      if (currentParams.has(key)) {\n        newUtmParams.set(key, currentParams.get(key)!);\n        hasNewUtms = true;\n      }\n    });\n\n    // 2. If new UTMs are found, store them in session storage.\n    // This overwrites any old ones.\n    if (hasNewUtms) {\n      sessionStorage.setItem(SESSION_STORAGE_KEY, newUtmParams.toString());\n    }\n\n    // 3. Get the definitive UTMs to use (either newly found or from storage).\n    const storedUtmParams = sessionStorage.getItem(SESSION_STORAGE_KEY);\n    if (!storedUtmParams) {\n      return; // No UTMs to apply\n    }\n    \n    // 4. Find all links and append the stored UTMs.\n    // This runs on every page change to catch new links that are rendered.\n    const allLinks = document.getElementsByTagName('a');\n\n    for (let i = 0; i < allLinks.length; i++) {\n      const link = allLinks[i];\n      const originalHref = link.getAttribute('href');\n\n      if (originalHref) {\n        // Skip mailto, tel, and anchor links on the same page\n        if (originalHref.startsWith('mailto:') || originalHref.startsWith('tel:') || originalHref.startsWith('#')) {\n          continue;\n        }\n\n        try {\n          // Use URL constructor for robust parameter handling\n          const url = new URL(link.href);\n          \n          // Avoid double-appending\n          const storedParams = new URLSearchParams(storedUtmParams);\n          let alreadyHasAllParams = true;\n          storedParams.forEach((value, key) => {\n            if (url.searchParams.get(key) !== value) {\n              alreadyHasAllParams = false;\n            }\n          });\n\n          if (alreadyHasAllParams) {\n            continue;\n          }\n          \n          // Append stored UTMs\n          storedParams.forEach((value, key) => {\n            url.searchParams.set(key, value);\n          });\n          link.href = url.toString();\n\n        } catch (error) {\n          // Fallback for relative paths like \"/contato\"\n          if (!originalHref.includes(storedUtmParams)) {\n            if (originalHref.includes('?')) {\n              link.href = `${originalHref}&${storedUtmParams}`;\n            } else {\n              link.href = `${originalHref}?${storedUtmParams}`;\n            }\n          }\n        }\n      }\n    }\n  }, [pathname, searchParams]); // Effect runs on path or param change\n\n  return null; // This component does not render anything\n}"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AAGpC;AACA;AAHA;;;AAKA,MAAM,sBAAsB;AAErB,SAAS;IACd,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,eAAe,IAAA,qJAAe;IAEpC,IAAA,kNAAS,EAAC;QACR,qDAAqD;QACrD,MAAM,gBAAgB,IAAI,gBAAgB,aAAa,QAAQ;QAC/D,MAAM,UAAU;YAAC;YAAc;YAAc;YAAgB;YAAY;SAAc;QACvF,IAAI,eAAe,IAAI;QAEvB,IAAI,aAAa;QACjB,QAAQ,OAAO,CAAC,CAAA;YACd,IAAI,cAAc,GAAG,CAAC,MAAM;gBAC1B,aAAa,GAAG,CAAC,KAAK,cAAc,GAAG,CAAC;gBACxC,aAAa;YACf;QACF;QAEA,2DAA2D;QAC3D,gCAAgC;QAChC,IAAI,YAAY;YACd,eAAe,OAAO,CAAC,qBAAqB,aAAa,QAAQ;QACnE;QAEA,0EAA0E;QAC1E,MAAM,kBAAkB,eAAe,OAAO,CAAC;QAC/C,IAAI,CAAC,iBAAiB;YACpB,QAAQ,mBAAmB;QAC7B;QAEA,gDAAgD;QAChD,uEAAuE;QACvE,MAAM,WAAW,SAAS,oBAAoB,CAAC;QAE/C,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;YACxC,MAAM,OAAO,QAAQ,CAAC,EAAE;YACxB,MAAM,eAAe,KAAK,YAAY,CAAC;YAEvC,IAAI,cAAc;gBAChB,sDAAsD;gBACtD,IAAI,aAAa,UAAU,CAAC,cAAc,aAAa,UAAU,CAAC,WAAW,aAAa,UAAU,CAAC,MAAM;oBACzG;gBACF;gBAEA,IAAI;oBACF,oDAAoD;oBACpD,MAAM,MAAM,IAAI,IAAI,KAAK,IAAI;oBAE7B,yBAAyB;oBACzB,MAAM,eAAe,IAAI,gBAAgB;oBACzC,IAAI,sBAAsB;oBAC1B,aAAa,OAAO,CAAC,CAAC,OAAO;wBAC3B,IAAI,IAAI,YAAY,CAAC,GAAG,CAAC,SAAS,OAAO;4BACvC,sBAAsB;wBACxB;oBACF;oBAEA,IAAI,qBAAqB;wBACvB;oBACF;oBAEA,qBAAqB;oBACrB,aAAa,OAAO,CAAC,CAAC,OAAO;wBAC3B,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK;oBAC5B;oBACA,KAAK,IAAI,GAAG,IAAI,QAAQ;gBAE1B,EAAE,OAAO,OAAO;oBACd,8CAA8C;oBAC9C,IAAI,CAAC,aAAa,QAAQ,CAAC,kBAAkB;wBAC3C,IAAI,aAAa,QAAQ,CAAC,MAAM;4BAC9B,KAAK,IAAI,GAAG,GAAG,aAAa,CAAC,EAAE,iBAAiB;wBAClD,OAAO;4BACL,KAAK,IAAI,GAAG,GAAG,aAAa,CAAC,EAAE,iBAAiB;wBAClD;oBACF;gBACF;YACF;QACF;IACF,GAAG;QAAC;QAAU;KAAa,GAAG,sCAAsC;IAEpE,OAAO,MAAM,0CAA0C;AACzD","debugId":null}}]
}